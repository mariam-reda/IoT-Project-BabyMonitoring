[{"id":"c76685c6.16f8c8","type":"tab","label":"SnapshotExpression","disabled":false,"info":""},{"id":"6d01a9fe.7b5d4","type":"comment","z":"c76685c6.16f8c8","name":"COMBINED WEBCAM USES THROUGH A SINGLE WEBCAM NODE","info":"","x":260,"y":40,"wires":[]},{"id":"cfc3dc72.e95c4","type":"http in","z":"c76685c6.16f8c8","name":"Camera End Point - GET Snapshot to Check-In on Child","url":"/checkInSnapshot","method":"get","upload":false,"swaggerDoc":"","x":220,"y":160,"wires":[["3d1494d4.b1d94c"]]},{"id":"9c5fe752.632668","type":"ui_webcam","z":"c76685c6.16f8c8","name":"","group":"f53f3462.d2e1b8","order":0,"width":"12","height":"8","countdown":false,"autoStart":true,"hideCaptureButton":false,"showImage":-1,"format":"png","x":380,"y":360,"wires":[["f20ac870.1d624","b11b82ce.0c21d","d0d05ce3.357ae"]]},{"id":"20cbd938.263066","type":"image","z":"c76685c6.16f8c8","name":"","width":160,"data":"payload","dataType":"msg","thumbnail":false,"active":true,"pass":false,"outputs":0,"x":940,"y":280,"wires":[]},{"id":"bde69c9c.2142b8","type":"http response","z":"c76685c6.16f8c8","name":"HTTP Response","statusCode":"200","headers":{},"x":1060,"y":180,"wires":[]},{"id":"f8d02f79.50a88","type":"change","z":"c76685c6.16f8c8","name":"Set Image Capture","rules":[{"t":"set","p":"capture","pt":"msg","to":"true","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":210,"y":260,"wires":[["9c5fe752.632668"]]},{"id":"f20ac870.1d624","type":"debug","z":"c76685c6.16f8c8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":550,"y":360,"wires":[]},{"id":"3d1494d4.b1d94c","type":"function","z":"c76685c6.16f8c8","name":"setFlowReqRes","func":"//store the http request and response to be able to access them \n//later for building final response message \n//(since Face-Rec overwrites the starting message)\n\nflow.set(\"http_req\", msg.req);\nflow.set(\"http_res\", msg.res);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":131,"y":208,"wires":[["fd609a85.7ac07"]]},{"id":"82bb66d2.d0f54","type":"function","z":"c76685c6.16f8c8","name":"buildResponseObject","func":"//retrieve the http request and response stored earlier to send  \n//response back\n\nmsg.req = flow.get(\"http_req\");\nmsg.res = flow.get(\"http_res\");\n\n//msg payload should stay as is since it contains the base-64 image\n//convert image to base64 format to send in JSON (and later display correctly)\nvar snapshot = msg.payload;\nvar img_buffer = new Buffer.from(snapshot).toString(\"base64\");\n\nmsg.payload = {\"snapshot\" : img_buffer};\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":960,"y":233,"wires":[["bde69c9c.2142b8","7b6bee2a.e516e"]]},{"id":"b11b82ce.0c21d","type":"switch","z":"c76685c6.16f8c8","name":"Snapshot Flow","property":"takeSnapshot","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":560,"y":280,"wires":[["96967c8b.1412d8","82bb66d2.d0f54"]]},{"id":"e6e418a1.1f5a9","type":"image","z":"c76685c6.16f8c8","name":"Labeled Image","width":"640","data":"payload","dataType":"msg","thumbnail":false,"active":true,"pass":false,"outputs":0,"x":760,"y":740,"wires":[]},{"id":"68eca77c.29507","type":"change","z":"c76685c6.16f8c8","name":"Set Payload to Image","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload[\"TBB Faces\"].image","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":760,"y":700,"wires":[["e6e418a1.1f5a9"]]},{"id":"d5bef8ac.6edad","type":"function","z":"c76685c6.16f8c8","name":"checkExpression","func":"\n//retrieve face(s) detected from message payload\nvar allFacesDetected = msg.payload[\"TBB Faces\"].faces;\n\n//check if any faces were detected\nvar expressionDetected = \"\";\nif (allFacesDetected.length > 0)    /*at least 1 detected successfully*/\n{\n    //get expression label for the face (should only be 1 since camera is on child)\n    expressionDetected = msg.payload[\"TBB Faces\"].faces[0].expressionLabel;\n}\n\n\n//check if expression is 'distressed' (sad/angry/fearful/disgusted)\nvar distressDetected = false;\nif (expressionDetected != \"\")\n{\n    if (expressionDetected == \"sad\" || expressionDetected == \"angry\" \n    || expressionDetected == \"fearful\" || expressionDetected == \"disgusted\")\n    {\n        distressDetected = true;\n    }\n}\n\n//send the 'distressDetected' variable in the message payload\nmsg.payload = {\n    // \"TBB Faces\" : msg.payload[\"TBB Faces\"],\n    \"distressDetected\": distressDetected,\n    \"expressionDetected\": expressionDetected\n}\n\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":790,"y":540,"wires":[["2a82b22d.561966","d1ad9aa2.3b4d38"]]},{"id":"2a82b22d.561966","type":"debug","z":"c76685c6.16f8c8","name":"FunctionDebug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1000,"y":580,"wires":[]},{"id":"747da63a.0158b","type":"function","z":"c76685c6.16f8c8","name":"getLabelledImage","func":"//msg.payload = 'data:image/png;base64,' + msg.payload[\"TBB Faces\"].image.toString('base64')\nmsg.payload = msg.payload[\"TBB Faces\"].image.toString('base64');\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":130,"y":920,"wires":[[]]},{"id":"38fd532.6031c2c","type":"debug","z":"c76685c6.16f8c8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":620,"wires":[]},{"id":"f17ae8a.3460298","type":"face-api-input","z":"c76685c6.16f8c8","name":"Find Faces","numNodes":1,"computeNode1":"5adfec11.8f4ef4","computeNode2":"","computeNode3":"","computeNode4":"","computeNode5":"","computeNode6":"","computeNode7":"","computeNode8":"","computeNode9":"","computeNode10":"","x":590,"y":580,"wires":[["38fd532.6031c2c","d5bef8ac.6edad","68eca77c.29507"]]},{"id":"d0d05ce3.357ae","type":"switch","z":"c76685c6.16f8c8","name":"Expression Flow","property":"checkExpression","propertyType":"flow","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":560,"y":460,"wires":[["f17ae8a.3460298","d0bbe479.e6367"]]},{"id":"c74b2f7c.0b757","type":"inject","z":"c76685c6.16f8c8","name":"Trigger Expression Check","props":[{"p":"payload"},{"p":"capture","v":"true","vt":"str"}],"repeat":"60","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":500,"wires":[["7211d589.42cb44","dad5c4ef.8e0868"]]},{"id":"dad5c4ef.8e0868","type":"function","z":"c76685c6.16f8c8","name":"setFlow_ExpressionCheck","func":"//will set a flow variable to indicate that the expression is being\n//requested, so that the correct flow will execute\nflow.set(\"checkExpression\", true);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":200,"y":560,"wires":[["9c5fe752.632668"]]},{"id":"d1ad9aa2.3b4d38","type":"switch","z":"c76685c6.16f8c8","name":"TriggerDistressedNotif","property":"payload.distressDetected","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":1020,"y":500,"wires":[["af335b7f.b44ba8","7eab1e06.694188"]]},{"id":"71854556.b6fb84","type":"mqtt out","z":"c76685c6.16f8c8","name":"","topic":"Project/image","qos":"","retain":"","broker":"d219bf1.aec73c","x":320,"y":920,"wires":[]},{"id":"af335b7f.b44ba8","type":"mqtt out","z":"c76685c6.16f8c8","name":"MQTT Out - Project/distress","topic":"Project/distress","qos":"","retain":"","broker":"d219bf1.aec73c","x":1140,"y":440,"wires":[]},{"id":"6822e5dd.8493d4","type":"comment","z":"c76685c6.16f8c8","name":"1. Snapshot to Check-in on Child","info":"","x":150,"y":106,"wires":[]},{"id":"7f28be8b.848538","type":"comment","z":"c76685c6.16f8c8","name":"2. Continuous Expression Check for Distress","info":"","x":190,"y":440,"wires":[]},{"id":"12872958.51f007","type":"comment","z":"c76685c6.16f8c8","name":"(Unused)","info":"","x":100,"y":880,"wires":[]},{"id":"96967c8b.1412d8","type":"function","z":"c76685c6.16f8c8","name":"resetFlowVar","func":"//reset flow snapshot variable to avoid repeating snapshots without\n//request\nflow.set(\"takeSnapshot\", false);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":750,"y":320,"wires":[[]]},{"id":"d0bbe479.e6367","type":"function","z":"c76685c6.16f8c8","name":"resetFlowVar","func":"//reset flow snapshot variable to avoid repeating snapshots without\n//request\nflow.set(\"checkExpression\", false);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":750,"y":420,"wires":[[]]},{"id":"fd609a85.7ac07","type":"function","z":"c76685c6.16f8c8","name":"setFlow_TakeSnapshot","func":"//will also set a flow variable to indicate that a snapshot is being\n//requested, so that the correct flow will execute\nflow.set(\"takeSnapshot\", true);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":341,"y":208,"wires":[["f8d02f79.50a88"]]},{"id":"7b6bee2a.e516e","type":"debug","z":"c76685c6.16f8c8","name":"Response Msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1200,"y":233,"wires":[]},{"id":"7eab1e06.694188","type":"debug","z":"c76685c6.16f8c8","name":"MQTT Output!","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1240,"y":500,"wires":[]},{"id":"7211d589.42cb44","type":"debug","z":"c76685c6.16f8c8","name":"ExprCheck!","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"capture","targetType":"msg","statusVal":"","statusType":"auto","x":290,"y":620,"wires":[]},{"id":"f53f3462.d2e1b8","type":"ui_group","name":"IoT_Simulated_Cam","tab":"fb43b027.68b37","order":3,"disp":true,"width":"12","collapse":false},{"id":"5adfec11.8f4ef4","type":"face-api-compute","name":"TBB Faces","childHost":true,"recognitionType":"SSD","multipleFaces":"Multiple Faces","confidence":"50","inputSize":"416","landmarks":true,"expressions":true,"ageGender":true,"recognition":false,"labelName":"known","file":""},{"id":"d219bf1.aec73c","type":"mqtt-broker","name":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"fb43b027.68b37","type":"ui_tab","name":"IoT_Project_Dashboard","icon":"dashboard","disabled":false,"hidden":false}]